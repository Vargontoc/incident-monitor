version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: sim
      POSTGRES_USER: sim
      POSTGRES_PASSWORD: sim
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sim -d sim"]
      interval: 10s
      timeout: 3s
      retries: 10

  api:
    build: ./backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/sim
      SPRING_DATASOURCE_USERNAME: sim
      SPRING_DATASOURCE_PASSWORD: sim
      JWT_SECRET: ${JWT_SECRET}
      APP_AI_URL: http://ollama:11434
      APP_AI_MODEL: qwen2:1.5b
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  web:
    build: ./frontend/incident-monitor-app
    depends_on:
      - api
    ports:
      - "80:80"

  ollama:
    image: ollama/ollama:latest
    restart: unless-stopped
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      MODELS: qwen2:1.5b
    entrypoint: ["/bin/sh", "-lc"]
    command: >
      'ollama serve & pid=$!;
      echo "Waiting for Ollama...";
      until ollama list >/dev/null 2>&1; do sleep 1; done;
      for m in $${MODELS}; do
      echo "Pulling $$m...";
      ollama pull "$$m" || exit 1;
      done;
      echo "Models ready.";
      wait $$pid'
    healthcheck:
      test: ["CMD", "/bin/sh", "-lc", "ollama list >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20

volumes:
  pgdata:
  ollama:
